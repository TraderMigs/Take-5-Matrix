@tailwind base;
@tailwind components;
@tailwind utilities;

/* Shimmering mint green gradient animation - Light mode only */
@keyframes shimmer-mint {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

.shimmer-mint {
  background: linear-gradient(
    90deg,
    #34d399 0%,
    #5eead4 25%,
    #67e8f9 50%,
    #5eead4 75%,
    #34d399 100%
  );
  background-size: 200% 200%;
  animation: shimmer-mint 3s ease-in-out infinite;
}

/* Disable shimmer in dark mode */
.dark .shimmer-mint {
  background: #000000 !important;
  animation: none !important;
}

/* Clean colors without yellow borders */
html, body {
  background-color: #ffffff !important;
}

html.dark, body.dark {
  background-color: #1F2937 !important;
}

/* Remove all default borders and yellow highlighting */
button, input, div, section {
  border: none !important;
  box-shadow: none !important;
}

/* Override for search input border */
.search-input {
  border: 1px solid #000000 !important;
}

.dark .search-input {
  border: 1px solid #ffffff !important;
}

/* Override for contact input borders */
.contact-input {
  border: 1px solid #000000 !important;
}

.dark .contact-input {
  border: 1px solid #ffffff !important;
}

/* Force consistent popup/modal theming */
[data-radix-popper-content-wrapper],
[data-radix-dialog-content],
[data-radix-dropdown-menu-content],
[data-radix-popover-content] {
  background-color: #ffffff !important;
  color: #000000 !important;
  border: 2px solid #000000 !important;
}

.dark [data-radix-popper-content-wrapper],
.dark [data-radix-dialog-content],
.dark [data-radix-dropdown-menu-content],
.dark [data-radix-popover-content] {
  background-color: #000000 !important;
  color: #ffffff !important;
  border: 2px solid #ffffff !important;
}

button:focus, input:focus {
  outline: none !important;
}



:root {
  --background: 255 255 255; /* #FFFFFF - White background */
  --foreground: 71 85 105; /* #47556D - Navy blue text */
  --muted: 243 244 246; /* #F3F4F6 - Light gray */
  --muted-foreground: 156 163 175; /* #9CA3AF - Warm light gray */
  --popover: 255 255 255; /* #FFFFFF */
  --popover-foreground: 71 85 105; /* #47556D */
  --card: 255 255 255; /* #FFFFFF */
  --card-foreground: 71 85 105; /* #47556D */
  --border: 229 231 235; /* #E5E7EB */
  --input: 243 244 246; /* #F3F4F6 */
  --primary: 71 85 105; /* #47556D - Soft Navy Blue */
  --primary-foreground: 255 255 255; /* #FFFFFF */
  --secondary: 243 244 246; /* #F3F4F6 */
  --secondary-foreground: 71 85 105; /* #47556D */
  --accent: 107 142 123; /* #6B8E7B - Muted Sage Green */
  --accent-foreground: 255 255 255; /* #FFFFFF */
  --destructive: 239 68 68; /* #EF4444 */
  --destructive-foreground: 255 255 255; /* #FFFFFF */
  --ring: 71 85 105; /* #47556D */
  --radius: 0.75rem;
  
  /* Take 5 Core Colors */
  --navy-blue: 71 85 105; /* #47556D - Soft Navy Blue */
  --sage-green: 107 142 123; /* #6B8E7B - Muted Sage Green */
  --light-gray: 156 163 175; /* #9CA3AF - Warm Light Gray */
  --soft-bg: 243 244 246; /* #F3F4F6 */
  --emergency-red: 239 68 68; /* #EF4444 */
}

.dark {
  --background: 31 41 55; /* #1F2937 - Charcoal Black */
  --foreground: 255 255 255; /* #FFFFFF - White text */
  --muted: 55 65 81; /* #374151 - Dark muted */
  --muted-foreground: 156 163 175; /* #9CA3AF */
  --popover: 31 41 55; /* #1F2937 */
  --popover-foreground: 255 255 255; /* #FFFFFF */
  --card: 31 41 55; /* #1F2937 */
  --card-foreground: 255 255 255; /* #FFFFFF */
  --border: 55 65 81; /* #374151 */
  --input: 55 65 81; /* #374151 */
  --primary: 107 142 123; /* #6B8E7B - Sage Green as primary in dark */
  --primary-foreground: 31 41 55; /* #1F2937 */
  --secondary: 55 65 81; /* #374151 */
  --secondary-foreground: 255 255 255; /* #FFFFFF */
  --accent: 71 85 105; /* #47556D - Navy Blue as accent in dark */
  --accent-foreground: 255 255 255; /* #FFFFFF */
  --destructive: 239 68 68; /* #EF4444 */
  --destructive-foreground: 255 255 255; /* #FFFFFF */
  --ring: 107 142 123; /* #6B8E7B */
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-inter antialiased;
    background-color: #ffffff !important;
    color: hsl(var(--foreground));
    font-family: 'Inter', sans-serif;
  }

  body.dark {
    background-color: #1F2937 !important;
  }

  html {
    background-color: #ffffff !important;
  }

  html.dark {
    background-color: #1F2937 !important;
  }
}

@layer utilities {
  .font-inter {
    font-family: 'Inter', sans-serif;
  }
  
  .bg-navy-blue {
    background-color: hsl(var(--navy-blue));
  }
  
  .bg-sage-green {
    background-color: hsl(var(--sage-green));
  }
  
  .bg-light-gray {
    background-color: hsl(var(--light-gray));
  }
  
  .bg-soft-bg {
    background-color: hsl(var(--soft-bg));
  }
  
  .bg-emergency-red {
    background-color: hsl(var(--emergency-red));
  }
  
  .text-navy-blue {
    color: hsl(var(--navy-blue));
  }
  
  .text-sage-green {
    color: hsl(var(--sage-green));
  }
  
  .text-light-gray {
    color: hsl(var(--light-gray));
  }
  
  .text-emergency-red {
    color: hsl(var(--emergency-red));
  }
  
  .border-navy-blue {
    border-color: hsl(var(--navy-blue));
  }
  
  .border-sage-green {
    border-color: hsl(var(--sage-green));
  }
  
  .hover\:bg-navy-blue:hover {
    background-color: hsl(var(--navy-blue));
  }
  
  .hover\:bg-sage-green:hover {
    background-color: hsl(var(--sage-green));
  }
  
  .hover\:border-navy-blue:hover {
    border-color: hsl(var(--navy-blue));
  }
  
  .hover\:border-sage-green:hover {
    border-color: hsl(var(--sage-green));
  }

  /* Override ReactCrop circular styling to force rectangular cropping */
  .ReactCrop__crop-selection {
    border-radius: 0 !important;
    border: 2px solid #3b82f6 !important;
  }

  .ReactCrop__drag-handle {
    border-radius: 0 !important;
    background-color: #3b82f6 !important;
  }

  .ReactCrop__drag-handle:after {
    border-radius: 0 !important;
  }

  /* Remove any yellow from react-image-crop */
  .ReactCrop *[style*="yellow"],
  .ReactCrop *[style*="#fff"],
  .ReactCrop *[style*="#fef"],
  .ReactCrop *[style*="#fbb"] {
    background-color: #3b82f6 !important;
    border-color: #3b82f6 !important;
  }

  /* Force remove yellow from all buttons and UI elements globally */
  button[style*="yellow"],
  button[class*="yellow"],
  .bg-yellow-300,
  .bg-yellow-400,
  .bg-yellow-500,
  .text-yellow-300,
  .text-yellow-400,
  .text-yellow-500,
  .border-yellow-300,
  .border-yellow-400,
  .border-yellow-500 {
    background-color: #64748b !important; /* slate-500 */
    color: white !important;
    border-color: #475569 !important; /* slate-600 */
  }

  /* Override any remaining yellow in image crop modal specifically */
  .ReactCrop__crop-selection {
    background-color: rgba(59, 130, 246, 0.1) !important; /* blue with transparency */
  }

  /* Force override all yellow variations globally */
  *[class*="yellow"],
  *[style*="rgb(255, 255, 0)"],
  *[style*="rgb(255, 240, 0)"],
  *[style*="rgb(255, 193, 7)"],
  *[style*="#ffff00"],
  *[style*="#fff000"],
  *[style*="#ffc107"] {
    background-color: #64748b !important; /* slate-500 */
    color: white !important;
    border-color: #475569 !important; /* slate-600 */
  }

  /* Ensure proper centering for ReactCrop component */
  .ReactCrop {
    display: flex !important;
    justify-content: center !important;
    align-items: center !important;
    width: 100% !important;
  }

  .ReactCrop > img {
    max-width: 100% !important;
    max-height: 400px !important;
    object-fit: contain !important;
  }

  /* Force remove all yellow colors globally */
  .text-yellow-400,
  .text-yellow-500,
  .text-yellow-600,
  .bg-yellow-400,
  .bg-yellow-500,
  .bg-yellow-600,
  [style*="yellow"],
  *:hover .text-yellow-400,
  *:hover .text-yellow-500,
  *:hover .text-yellow-600 {
    color: #000000 !important; /* black */
    background-color: transparent !important;
  }

  .dark .text-yellow-400,
  .dark .text-yellow-500,
  .dark .text-yellow-600,
  .dark *:hover .text-yellow-400,
  .dark *:hover .text-yellow-500,
  .dark *:hover .text-yellow-600 {
    color: #ffffff !important; /* white */
  }

  /* Affirmations animation */
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in {
    animation: fade-in 0.8s ease-in-out;
  }
}
